{
  "stats": {
    "suites": 3,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-13T00:11:35.243Z",
    "end": "2024-10-13T00:11:37.504Z",
    "duration": 2261,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "764cff76-ba81-4abd-b2a2-32377a0c4036",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 457,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n  .post(\"http://lojaebac.ebaconline.art.br/public/authUser\")\n  .withJson({\n    email: \"admin@admin.com\",\n    password: \"admin123\",\n  })\n  .returns(\"data.token\");",
          "err": {},
          "uuid": "189eafa0-554b-487c-9ee9-496ce520f5db",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 342,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "token = await spec()\n    .post(\"http://lojaebac.ebaconline.art.br/public/authUser\")\n    .withJson({\n      email: \"admin@admin.com\",\n      password: \"admin123\",\n    })\n    .returns(\"data.token\");",
          "err": {},
          "uuid": "eecb2558-ce1f-45df-add0-a00b00ac28d3",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();",
          "err": {},
          "uuid": "d5627fee-990c-41d2-9bed-0d148b66725d",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 426,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "addFlowReporter();\nawait mock.start(4000);\ntoken = await flow(\"Login\")\n  .post(\"http://lojaebac.ebaconline.art.br/public/authUser\")\n  .withJson({\n    email: \"admin@admin.com\",\n    password: \"admin123\",\n  })\n  .returns(\"data.token\");\nconst response = await flow(\"Get Categories\")\n  .get(\"http://lojaebac.ebaconline.art.br/public/getCategories\")\n  .expectStatus(200);\ncategoryName = response.body.categories[0].name;",
          "err": {},
          "uuid": "f16db043-7f7c-48ff-b139-84f4592dfeff",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook for \"FRONT - deve adicionar um novo produto\"",
          "fullTitle": "\"after all\" hook for \"FRONT - deve adicionar um novo produto\"",
          "timedOut": false,
          "duration": 95,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "await reporter.end();\n// Limpar fluxos e interações\nspec.clear();",
          "err": {
            "message": "StatusCodeError: 400 - {\"error\":\"Analysis already exists\"}",
            "estack": "StatusCodeError: 400 - {\"error\":\"Analysis already exists\"}\n    at Object.reject (node_modules\\phin-retry\\src\\index.js:184:11)\n    at Object.__fetch (node_modules\\phin-retry\\src\\index.js:268:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async createAnalysis (node_modules\\pactum-flow-plugin\\src\\publisher.js:29:15)\n    at async publish (node_modules\\pactum-flow-plugin\\src\\publisher.js:116:16)\n    at async run (node_modules\\pactum-flow-plugin\\src\\runner.js:12:3)\n    at async Object.end (node_modules\\pactum-flow-plugin\\src\\reporter.js:13:3)\n    at async Object.end (node_modules\\pactum\\src\\exports\\reporter.js:32:23)\n    at async Context.<anonymous> (test\\contract\\category.contract.test.js:26:3)",
            "diff": null
          },
          "uuid": "e130d4e0-c0fa-46c5-b3e9-ddd33b545252",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after all\" hook",
          "fullTitle": "\"after all\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await mock.stop();\n// Limpar fluxos e interações\nflow.clear();\nhandler.clear();",
          "err": {},
          "uuid": "b2d747a1-b8d1-4fe4-8f78-e7329a538553",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after all\" hook",
          "fullTitle": "\"after all\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await reporter.end();\n// Limpar fluxos e interações\nflow.clear();\nhandler.clear();",
          "err": {},
          "uuid": "edcd053c-878e-4af1-82e9-090ef3c6b862",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "FRONT - deve adicionar um novo produto",
          "fullTitle": "FRONT - deve adicionar um novo produto",
          "timedOut": false,
          "duration": 11,
          "state": "passed",
          "speed": "fast",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await flow(\"Add Product\")\n  .useInteraction(\"Add Product Response\")\n  .post(\"http://localhost:4000/api/addProduct\")\n  .withHeaders(\"Authorization\", `Bearer ${token}`)\n  .withJson({\n    name: faker.commerce.productName(),\n    price: faker.commerce.price(),\n    quantity: faker.string.numeric(1),\n    categories: categoryName,\n    description: faker.lorem.sentence(),\n    photos: faker.image.url(),\n    popular: faker.datatype.boolean(),\n    visible: faker.datatype.boolean(),\n    location: faker.location.city(),\n    additionalDetails: faker.lorem.paragraph(),\n    specialPrice: faker.commerce.price(),\n  })\n  .expectStatus(200)\n  .expectJson(\"success\", true);",
          "err": {},
          "uuid": "02feabb2-e0d4-478f-a4e8-477119292e72",
          "parentUUID": "764cff76-ba81-4abd-b2a2-32377a0c4036",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [
        {
          "uuid": "d9177490-8c66-43c5-88a7-511007157b19",
          "title": "API - Categories",
          "fullFile": "C:\\Users\\vexxr\\Documents\\GitHubJu\\Modulo 24\\exercicio modulo 24\\test\\api\\categories.test.js",
          "file": "\\test\\api\\categories.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve adicionar uma nova categoria",
              "fullTitle": "API - Categories Deve adicionar uma nova categoria",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await spec()\n  .post(\"http://lojaebac.ebaconline.art.br/api/addCategory\")\n  .withHeaders(\"Authorization\", token)\n  .withJson({\n    name: faker.commerce.department(),\n    photo: faker.image.url(),\n  })\n  .expectStatus(200)\n  .expectJson(\"success\", true);\ncategoryId = response.body.data._id;",
              "err": {},
              "uuid": "0e520789-726a-4a6f-a145-dc4066b8a222",
              "parentUUID": "d9177490-8c66-43c5-88a7-511007157b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar uma categoria existente",
              "fullTitle": "API - Categories Deve editar uma categoria existente",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n      .put(`http://lojaebac.ebaconline.art.br/api/editCategory/${categoryId}`)\n      .withHeaders(\"Authorization\", token)\n      .withJson({\n        name: faker.commerce.department(),\n        photo: faker.image.url(),\n      })\n      .expectStatus(200)\n      .expectJson(\"success\", true);",
              "err": {},
              "uuid": "3c2f139c-26f8-417c-9b43-121821f98344",
              "parentUUID": "d9177490-8c66-43c5-88a7-511007157b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar uma categoria",
              "fullTitle": "API - Categories Deve deletar uma categoria",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n  .delete(\n    `http://lojaebac.ebaconline.art.br/api/deleteCategory/${categoryId}`\n  )\n  .withHeaders(\"Authorization\", token)\n  .expectStatus(200)\n  .expectJson(\"success\", true);",
              "err": {},
              "uuid": "392cf614-b447-4fe6-8a03-cbaf5ef16102",
              "parentUUID": "d9177490-8c66-43c5-88a7-511007157b19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e520789-726a-4a6f-a145-dc4066b8a222",
            "3c2f139c-26f8-417c-9b43-121821f98344",
            "392cf614-b447-4fe6-8a03-cbaf5ef16102"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "342830c4-6f21-4679-bf8a-2752ca861243",
          "title": "API - Products",
          "fullFile": "C:\\Users\\vexxr\\Documents\\GitHubJu\\Modulo 24\\exercicio modulo 24\\test\\api\\products.test.js",
          "file": "\\test\\api\\products.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"API - Products\"",
              "fullTitle": "API - Products \"before all\" hook in \"API - Products\"",
              "timedOut": false,
              "duration": 42,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await spec()\n  .get(\"http://lojaebac.ebaconline.art.br/public/getCategories\")\n  .expectStatus(200);\ncategoryId = response.body.categories[0]._id.name;",
              "err": {},
              "uuid": "b13f7be4-43f1-44e5-a995-903e53e3d8d3",
              "parentUUID": "342830c4-6f21-4679-bf8a-2752ca861243",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve adicionar um novo produto",
              "fullTitle": "API - Products Deve adicionar um novo produto",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await spec()\n  .post(\"http://lojaebac.ebaconline.art.br/api/addProduct\")\n  .withHeaders(\"Authorization\", token)\n  .withJson({\n    name: faker.commerce.productName(),\n    price: faker.commerce.price(),\n    quantity: faker.string.numeric(1),\n    categories: categoryId,\n    description: faker.lorem.sentence(),\n    photos: faker.image.url(),\n    popular: faker.datatype.boolean(),\n    visible: faker.datatype.boolean(),\n    location: faker.location.city(),\n    additionalDetails: faker.lorem.paragraph(),\n    specialPrice: faker.commerce.price(),\n  })\n  .expectStatus(200)\n  .expectJson(\"success\", true);\nproductId = response.body.data._id;",
              "err": {},
              "uuid": "f7c05e02-b7ce-4ee7-a8a5-b678e8d70a5b",
              "parentUUID": "342830c4-6f21-4679-bf8a-2752ca861243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto existente",
              "fullTitle": "API - Products Deve editar um produto existente",
              "timedOut": false,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n      .put(`http://lojaebac.ebaconline.art.br/api/editProduct/${productId}`)\n      .withHeaders(\"Authorization\", token)\n      .withJson({\n        name: faker.commerce.productName(),\n        price: faker.commerce.price(),\n        quantity: faker.string.numeric(1),\n        categories: categoryId,\n        description: faker.lorem.sentence(),\n        photos: faker.image.url(),\n        popular: faker.datatype.boolean(),\n        visible: faker.datatype.boolean(),\n        location: faker.location.city(),\n        additionalDetails: faker.lorem.paragraph(),\n        specialPrice: faker.commerce.price(),\n      })\n      .expectStatus(200)\n      .expectJson(\"success\", true);",
              "err": {},
              "uuid": "9c81a3af-ecbb-43e1-ab80-ce605dee3563",
              "parentUUID": "342830c4-6f21-4679-bf8a-2752ca861243",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um produto",
              "fullTitle": "API - Products Deve deletar um produto",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await spec()\n      .delete(\n        `http://lojaebac.ebaconline.art.br/api/deleteProduct/${productId}`\n      )\n      .withHeaders(\"Authorization\", token)\n      .expectStatus(200)\n      .expectJson(\"success\", true);",
              "err": {},
              "uuid": "e6a9eb3d-3722-4b6d-abb2-1c08886cffa4",
              "parentUUID": "342830c4-6f21-4679-bf8a-2752ca861243",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7c05e02-b7ce-4ee7-a8a5-b678e8d70a5b",
            "9c81a3af-ecbb-43e1-ab80-ce605dee3563",
            "e6a9eb3d-3722-4b6d-abb2-1c08886cffa4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcfec74e-0965-48e2-bd5a-ade8f3d689fb",
          "title": "API - Categories",
          "fullFile": "C:\\Users\\vexxr\\Documents\\GitHubJu\\Modulo 24\\exercicio modulo 24\\test\\contract\\category.contract.test.js",
          "file": "\\test\\contract\\category.contract.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"API - Categories\"",
              "fullTitle": "API - Categories \"before all\" hook in \"API - Categories\"",
              "timedOut": false,
              "duration": 343,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "token = await spec()\n  .post(\"http://lojaebac.ebaconline.art.br/public/authUser\")\n  .withJson({\n    email: \"admin@admin.com\",\n    password: \"admin123\",\n  })\n  .returns(\"data.token\");",
              "err": {},
              "uuid": "fac30ef1-4964-4015-b877-0f4c612eaa18",
              "parentUUID": "fcfec74e-0965-48e2-bd5a-ade8f3d689fb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "API - deve adicionar uma categoria corretamente",
              "fullTitle": "API - Categories API - deve adicionar uma categoria corretamente",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await spec()\n  .post(\"http://lojaebac.ebaconline.art.br/api/addCategory\")\n  .withHeaders(\"Authorization\", token)\n  .withJson({\n    name: faker.commerce.department(),\n    photo: faker.image.url(),\n  })\n  .expectStatus(200)\n  .expectJson(\"success\", true)\n  .expectJson(\"message\", \"category added\");\ncategoryId = response.body.data._id;",
              "err": {},
              "uuid": "0f172b3f-78dd-4fa8-84e9-b70456b06a31",
              "parentUUID": "fcfec74e-0965-48e2-bd5a-ade8f3d689fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f172b3f-78dd-4fa8-84e9-b70456b06a31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [
        "02feabb2-e0d4-478f-a4e8-477119292e72"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 11,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}